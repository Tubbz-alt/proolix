Built-in Proolix blog. Cyrillic in UTF-8 codetable
Author: Prool

В прямом хронологическом порядке

Отчет о происходящем

--------------------------------------------------------------------------------------------
18-Nov-2016. Proolix-l нормально собирается в Ubuntu 15.10 64bit, gcc 5.2.1

И НЕ собирается в Ubuntu 16.10 64bit, gcc 6.2.0

Ошибка при сборке stage2

ctmp.s:590: Error: 8-byte relocation cannot be applied to 4-byte field

в строке

	leal	.LC0@GOTOFF(%ebx), %eax

Буду думать

22-Nov-2016. Проблему с методом адресации GOTOFF частично решил.
Двигаюсь дальше

* * *

Ну, мучиться, так мучиться. Проще переписать switch в виде батареи вложенных if, чем разбираться
в хитрой адресации.

И вместо глобальных переменных в смысле языка С надо использовать физические ячейки памяти (найти
для этого соответствующий неиспользуемый блок)

Это тупо и громоздко, но это будет работать!

24-Nov-2016 diskd сделано

На будущее: при инсталляции Пруликса на жесткий диск проще писать stage2 (ct) из ОЗУ, все равно оно
уже там, загружено

18-Dec-2016 инсталляция именно так и сделана (команда install)

29-Dec-2016 Обнаружена ошибка: в конце жесткого диска виртуальной машины геометрия считается неправильно: растет номер цилиндра,
а не головки и вычисляется цилиндр больше, чем есть. Проверить

30-Dec-2016 Созданы файлы todo.txt and bugs.txt

Ошибка, обнаруженная вчера, оказалась не ошибкой (см. bugs.txt)

11-Jan-2017

Сейчас загрузочную флешку я делаю при помощи unetbootin из образа загрузочной дискеты.
Но должно работать и без unetbootin, а именно: boot sector + binary image file 'ct'
Не забыть только, что флешка - это диск 0x80 и вообще инсталлировать на нее надо примерно как
на HDD, то есть как сделано в команде install
Проверить!

Сделать также тестовую сборку ядра Proolix-l (ct) в виде исполняемого файла Линукс.
Зачем? Для тестирования некоторых функций. Или для несложной инсталляции Пруликса
на флешку при помощи слегка модифицированной команды install (хотя то же
самое можно сделать и при помощи dd)

25-Jan-2017

Итак, что я сегодня выяснил:

Флешки бывают двух типов: флешка как HDD и флешка как дискета. У флешки-HDD первый физич. блок это master boot record
с таблицей partition table. А дальше идут разделы, чаще всего один. В терминах моего Ubuntu Linux флешка как физич. устройство
это /dev/sdb, а раздел /dev/sdb2. При загрузке с такой флешки сама флешка становится устройством 0x80 в терминах прерывания
0x13. А реальный физич. HDD - device 0x81.

Я загрузился с такой флешки (она была создана при помощи unetbootin) и набрал команду install. И инсталлировал Пруликс на
устройство 80, то есть на эту же флешку, только в raw формате (без syslinux и файловой системы). И смог загрузиться
с raw флешки.

Затем я сделал флешку другого типа (флешка-как-дискета). Первым блоком у нее идет boot sector, никакой MBR нет. На такую флешку
тоже можно при помощи unetbootin установить syslinux и загрузить с нее Proolix-l. Но при этом диск 80 - это реальный
HDD! Я этого тогда не знал и набрал команду install и инсталлировался на устройство 80 и установил Пруликс на реальный
HDD и запортил Винду на ноуте. Но такой случайный эксперимент показал, что установленный на реальный жесткий диск
реального компьютера Пруликс загружается и работает. (То есть загружается ядро, пока кроме ядра у Пруликса еще ничего нет,
файловой системы нет).

А Винду я потом восстановил без проблем, так как первый цилинд винчестера почти не используется. MBR я восстановил,
загрузившись с CD с Виндой и вначале запустив автоматич. восст. (оно ничего не дало), а потом выполнив
в консоли восстановления команду

bootrec /fixmbr

и потом на всякий случай

bootrec /fixboot

Винда стала нормально загружаться, но при этом в первом цилиндре (начиная с сектора номер 1, то есть второго сектора, то есть сектора,
непосредственно следующего за MBR) осталось ядро Пруликса и никто его не затер.

ЗАМЕЧАНИЕ СПУСТЯ НЕСКОЛЬКО ДНЕЙ: так я восстановил только диск C Винды. Для восстановления диска D пришлось использовать
rescue disk

Надо еще с Линуксом поэкспериментировать, он тоже вроде как не использует первый цилиндр

ЗАМЕЧАНИЕ: НЕ НАДО!

---------------------------------
14 июля 2017 года.

Пытался по-быстрому сделать загрузку ядра Пруликса при помощи GRUB. А именно по тому же шаблону, как memtest.
Не получилось, ни загрузка бинарного образа, ни elf'а. Надо читать документацию, а не выделываться!

16 июля 2017 года

Уже неск. дней работаю на реализацией FoolFS

Надо продумать структуры данных для системных вызовов open/read/write/close/delete_file. Особый цимес в том,
что ядро Пруликса компилируется через жопу и там невозможны статические переменные и переключатели (switch)

17 июля

Я начал забывать, что уже сделал. Статические переменные я реализовал, тоже через жопу, но "это работает".
Переменные объявляются в ассемблерном модуле prefix.s, а обращаться к ним можно как из ассемблерного модуля,
так и из модуля на C. Пример такой переменной - gCyl.

18 июля

Еще одна возможная польза от Пруликса: использовать его для термотренировки (термотестирования) компьютеров.
Пруликс никогда не спит, он постоянно крутит пустые циклы, чем нагружает процессор. Точнее пустые циклы
крутит BIOS, например, когда Пруликс находится в состоянии ожидания ввода с клавиатуры

24 июля

Для полноценного тестирования Пруликса нужно тестирование и отладка не только на виртуальной, но и на реальной
машине. Но не выделять же отдельный ноутбук только для Пруликса! Методы сосуществования с другими ОС я пока не 
сделал, а хочется максимально просто. Только что пришла идея внедряться по принципу бутового вируса. То есть,
при инсталляции где-то запоминать затертые MBR и секторы после него и как-то восстанавливать
при загрузке "большой ОС" (то есть присутствующего там Линукса или Винды)

1 августа

ВНЕЗАПНО установил кроме эмулятора VirtualBox эмулятор kvm (qemu), запускающийся из командной строки.
И странно в режиме qemu-i386 (впрочем, и в qemu-x86_64) Пруликс не грузится с образа hdd (с того образа,
с которого нормально грузится в VirtualBox). С образа дискеты нормально грузится и в среде VirtualBox и
в kvm. Кроме того, образ hdd со старым ассемблерным ядром "boot" нормально грузится и в VirtualBox и в kvm.
(При этом бут сектор один и тот же, то есть тот, который не грузит с винчестера с-ядро "ct" и нормально грузит
а-ядро "boot"). Возможно, это связано еще и с тем, что у меня отнялась команда принудительной загрузки с винчестера
hdd0 (после перемещения ядра с 0x3050 на 0x3000)

Надо подумать и разобраться...

1 августа (продолжение)

Протестирована система восстановления операционной системы, расположенной на жестком диске физического компьютера
(естественно, это будет работать и на виртуальном компьютере, но там это просто не нужно)

Итак, мы хотим потестировать Пруликс на физическом компьютере так, чтобы не запортить установленную там ОС.
Есть, конечно, внешние системы бекапа-восстановления типа Акронис, но я написал свою.

1. Вставляем в физ. комп. флешку с Пруликсом (флешку, сделанную при помощи unetbootin из образа дискеты Пруликса,
это важно!)

2. Сохраняем первые 200 секторов первого винчестера физ. компа на неиспользуемые участки флешки

dd
81
0
80
1
200

3. (необзательно) Проверяем, не запортилась ли флешка, повторно загружаясь с нее (если с нее стало нельзя загрузиться,
значит что-то пошло не так и дальнейшие эксперименты лучше прекратить)

4. Инсталлируем Пруликс на первый винч. физ. компа

install
81

(да, при загрузке с флешки, сделанной unetbootin, устройство 0x81 - это первый винчестер физического компьютера,
0x80 - флешка-как-винчестер, 0x0 - виртуальный флоппи диск A)

5. Вытаскиваем флешку и загружаем физический компьютер и видим экран OS Proolix

6. После экспериментов с Пруликс (не создавайте слишком много файлов, чтобы не вылезть выше 200 сектора! проверяйте
номер последнего использованного блока командой super) загружаемся с флешки и восстанавливаем прежнюю ОС

dd
80
1
81
0
200

ПРЕДУПРЕЖДЕНИЕ И СТАНДАРТНАЯ ОТМАЗКА:
Я не даю никакой гарантии, что данные действия не повредят вашу информацию безвозвратно и не несу
никакой ответственности. То, что у меня это получилось, для вас не гарантирует ничего!
Багрепорты будут приняты с благодарностью, ругань и судебные иски будут отправлены в /dev/null

--------------------------------------------------------------------------------------------------------------------
Пруль
