; Дизассемблированный файл bin/key из пакета Proolix
;	комментарий (c) G.Shepelev

;	#include <conio.h>
;	#include <stdio.h>
;	#include <stdlib.h>

;	void main()
 a0100:		jmp	a0104		; обход сигнатуры
 a0102		DB	0DEh,0ADh	; сигнатура Proolix'а
 a0104:		push	cs		;	никому не нужное здесь
 a0105:		pop	ax		;	сохранение значения сегмента
 a0106:		mov	[a0110],ax	;	в памяти программы
 a0109:		call	a0112		; вызов тела программы key
 a010C:		jmp	dword ptr [000C] ; выход из программы - межсегментный
					; переход на вектор завершения из PSP
					; ( в книжке П.Нортона адрес другой! )

 a0110		DW	?		;	область хранения (cs)

;	{

; тело программы...

;	int i;		; переменная целого типа, будет использоваться si
 a0112:		push	si		; сохраняем si

;	printf("View Key Codes\n\nPress Ctrl-D for exit\n\n");
 a0113:		push	ds		; 1-й параметр сегмент текстовой строки
 a0114:		mov	ax,a0166	; смещение текстовой строки
 a0117:		push	ax		; 2-й параметр
 a0118:		call	a0160		; вызов printf
 a011B:		add	sp,4		; извлечение параметров из стека

;	while(1)		; вечный цикл	;)
;	  {

;	  i=getch();
 a011E:		call	a015A		; вызов getch
 a0121:		mov	si,ax		; значение i


;	  printf("%i\n",i);			странненькие обозначения...
 a0123:		push	si		; численный параметр
 a0124:		push	ds		; 1-й параметр сегмент текстовой строки
 a0125:		mov	ax,a018E	; смещение текстовой строки
 a0128:		push	ax		; 2-й параметр
 a0129:		call	a0160		; вызов printf("%i\n",i)
 a012C:		add	sp,6		; извлечение параметров из стека

;	  switch(i)
;	    {
;	    case 4: printf("\n"); exit(0);
 a012F:		mov	ax,si		; численный параметр
 a0131:		cmp	ax,4		; case 4
 a0134:		jz	a0138		; совпало - перевод строки и выход
 a0136:		jmp	a011E		; возврат на while

 a0138:		push	ds		; 1-й параметр сегмент текстовой строки
 a0139:		mov	ax,a018C	; смещение текстовой строки
 a013C:		push	ax		; 2-й параметр
 a013D:		call	a0160		; вызов printf("\n")
 a0140:		add	sp,4		; извлечение параметров из стека

 a0143:		xor	ax,ax		; 0
 a0145:		push	ax		; параметр на стек
 a0146:		call	a014F		; exit(int)
 a0149:		inc	sp		; извлечение параметров из стека  :)
 a014A:		inc	sp
 a014B:		jmp	a011E		; возврат на while

;	    /* case 0: i=getch(); printf("%i\n",i); */

;	    }			собственно сюда мы никогда не попадём...
;	  }
;	}
 a014D:		pop	si		; восстанавливаем si
 a014E:		ret			; возврат в main - его не будет...


;	=exit
 a014F:		add	sp,2		; адрес возврата нам не понадобится...
 a0152:		mov	ax,word ptr [bp+4]	; параметр в стеке
				; (вот только регистр bp никто не настроил!)
 a0155:		jmp	dword ptr [000C] ; выход из программы - межсегментный
					; переход на вектор завершения из PSP
					; ( в книжке П.Нортона адрес другой! )

 a0159		DB	0		; Акела промахнулся!	;)

;	=getch
 a015A:		mov	ax,0	; номер функции getch прерывания INT_NO
 a015D:		int	84h	; int INT_NO
 a015F:		ret

;	=printf
 a0160:		mov	ax,10h	; номер функции printf прерывания INT_NO
 a0163:		int	84	; int INT_NO
 a0165:		ret

 a0166		DB	"View Key Codes",0Ah,0Ah	   ; "\n" - код 0Ah
		DB	"Press Ctrl-D for exit",0Ah,0Ah,0

 a018E		DB	"%i",0Ah,0			   ; "%i\n"
