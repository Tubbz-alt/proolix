История  написания ядра Пруликса в обратном порядке (в пунктах истории
обычно  поименовывалось то, что появилось нового в той или иной версии
ядра.  Но  7 сентября 2003 года я начал использовать CVS и после этого
большинство комментариев пишется в CVS в истории конкретного модуля)

        Методика  нумерация  версий еще не устоялась, однако примерные
правила таковы:
        Дата  в  наименовании  версии  обозначает текущую дату. Внутри
текущего  дня  (текущих  суток)  дата  и  время  (часы-минуты-секунды)
компиляции  вставляются  автоматически  использованием препроцессорных
переменных  компилятора  Turbo  C  2.0 (__DATE__ и __TIME__). В случае
более-менее  существенных  изменений  в  ОС  Пруликс, а также в случае
выпуска  очередного  издания  ОС в свет (например, выставлением на ftp
или   распространением  по  файл-эхе)  изменяется  номер  версии.  Чем
существеннее  изменения,  тем  более  значащий  разряд  номера  версии
претерпевает  изменения.  (Вы сами понимаете, что MSDOS 3.0 отличается
от  2.0  сильнее, чем 3.0 от 3.1). Последний (четвертый) разряд номера
версии  может  быть  изменен  даже  при  исправлении  одной опечатки в
программе и частичной ее перекомпиляции.

                TODO ?

 - драйверы  (DEVices)

 - удалить ненужные сис. вызовы типа end

                Kernel History (In STACK (REVERSE) order)
                История ядра в ОБРАТHОМ порядке

Ver. 0.1.2.2 26-Sep-2004

              7-Sep-2003 - начал использовать CVS

Ver. 0.1.2.1 28-May-2003

Ver. 0.1.1.19  4-Nov-99

Ver. 0.1.1.18  2-Nov-99 - загрузка в ДОС-окне Windows 95 OSR2 RUS
(В Windows 98 RUS тоже работает)

Ver. 0.1.1.17 26-Aug-99 - 0.1.1.16, compile by Turbo C 2.01
                                    (all previous compiled by TC 2.0)
Ver. 0.1.1.16 12-Apr-99

Ver. 0.1.1.15  3-Mar-99

Ver. 0.1.1.15 23-Feb-99

Ver. 0.1.1.14 22-Feb-99

Ver. 0.1.1.14 21-Feb-99

Ver. 0.1.1.14 20-Feb-99

Ver. 0.1.1.14 19-Feb-99

Ver. 0.1.1.13 18-Feb-99

Ver. 0.1.1.12  7-Feb-99

Ver. 0.1.1.11 22-Jan-99

Ver. 0.1.1.11  8-Jan-99 - написал exec() (не тот execve(), что написан
уже давно в модуле process.c, а настоящий exec(), что будет нормально
вызываться из процессов и будет соответствовать требованиям POSIX);

также написал новый exit()

Ver. 0.1.1.10  7-Jan-99 - fork() заработал!!! :))

Ver. 0.1.1.10  6-Jan-99

Ver. 0.1.1.10  5-Jan-99

Ver. 0.1.1.9  4-Jan-99

Ver. 0.1.1.8  3-Oct-98 - делаю fork()

Ver. 0.1.1.7  2-Oct-98 - исправлено несколько ошибок, в том числе в
команде start (демонстрации малтитаскинга)

Ver. 0.1.1.6  1-Oct-98 - заработал мультитаскер !!!

Ver. 0.1.1.5 30-Sep-98

Ver. 0.1.1.4 29-Jun-98  первый вариант пеланировщика (not worked)

Ver. 0.1.1.0 15-Feb-98. Исправлен глюк, заключавшийся в том, что ядро не
работало с файловой системой FAT-12 на винте. Аналогичный глюк в бутменеджере
был исправлен давно (в версии Пруликса 0.0.0.21 (L) 31-May-97),
но из-за моего недосмотра аналогичные изменения в ядро были внесены только
сейчас.

Ver. 0.1.1.2  8-Apr-98

Ver. 0.1.1.1 10-Mar-98

Ver. 0.1.1.0 14-Feb-98

Ver 0.1.0.33 14-Dec-97

Version  0.1.0.31 31-Aug-97

Version  0.1.0.30 24-Aug-97 - add system calls absread, abswrite;
fixed bug (возникавший, если длина полного пути > 11. Теперь полный путь
может занимать PATH_MAX символов (см. include/limits.h, сейчас =255 символов))

Version  0.1.0.29 17-Aug-97

Version  0.1.0.28 11-Jul-97

Version  0.1.0.27 30-Jun-97

Version  0.1.0.26 21-Jun-97

Version  0.1.0.25  9-Jun-97 в kernel.ovl добавлен загрузчик русских
шрифтов (portions copyright by G. Shepelev)

Version  0.1.0.26 31-May-97

Version  0.1.0.25 31-May-97 исправлен баг, возникавший в случае
вызова read(h,buf,len) при len>1024

Version  0.1.0.24 21-May-97

Version  0.1.0.23 18-May-97

Version  0.1.0.23 17-May-97

Version  0.1.0.22 15-May-97

Version  0.1.0.21W 14-May-97

Version  0.1.0.20W 12-May-97 версии с суффиксом "W" собраны
не дома, а на работе. Исправлена ошибка при работе с FAT > 64K

Version  0.1.0.19 11-May-97

Version  0.1.0.17  2-May-97

Version  0.1.0.17  1-May-97 fixed case Cylinder>255 in HDD

Version  0.1.0.16 30-Apr-97

Version  0.1.0.15 28-Apr-97 отловлен большой глюк в связи с тем, что ядро
откомпилировано Turbo C 2.0 в модели памяти small, где должно быть DS=SS, а
у меня было DS!=SS

Version  0.1.0.14 28-Apr-97

Version  0.1.0.14 27-Apr-97 booted from A:, B:, C:, D:, etc...

Version  0.1.0.13 26-Apr-97

Version  0.1.0.12 24-Apr-97 add system calls wherex(), wherey()

Version  0.1.0.11 23-Apr-97

Version  0.1.0.10 21-Apr-97

Version  0.1.0.9  20-Apr-97 отловлен большой глюк с mov SP, ...
(см. c0.asm от 20-Apr-97)

Version  0.1.0.8  22-Mar-97

Version  0.1.0.8  21-Mar-97

Version  0.1.0.8  20-Mar-97

Version  0.1.0.7  19-Mar-97

Version  0.1.0.6  13-Mar-97 - проведен частичный аудит всех
файлов на предмет копирайтов

Version  0.1.0.5   9-Mar-97

Version  0.1.0.5   8-Mar-97

Version  0.1.0.4   3-Mar-97

Version  0.1.0.4   2-Mar-97

Version  0.1.0.4   1-Mar-97

Version  0.1.0.3  23-Feb-97

Version  0.1.0.2  17-Feb-97 Hачиная с версии 0.1.0.0 в Пруликсе,
в ДОС-эмуляторе работает отладчик AFD-Pro (c) AdTec GmbH, 1987

Version  0.1.0.1   2-Feb-97

Version  0.1.0.1   1-Feb-97

Version  0.1.0.0  26-Jan-97

0.0.2.4  16-Oct-96 устранена ошибка: ранее вся работа с FAT (LinkClu())
делалась не с обеими копиями FAT

0.0.2.4  15-Oct-96

0.0.2.3  14-Oct-96 исправлена ошибка в связи с DS!=SS (см. src/kernel/c0.asm)

0.0.2.3  13-Oct-96

0.0.2.3  12-Oct-96

0.0.2.2  29-Sep-96

0.0.2.1  16-Sep-96

0.0.2.0  12-Sep-96

0.0.2.0  11-Sep-96

0.0.1.30 10-Jun-96

0.0.1.29 18-May-96

0.0.1.28 16-May-96

0.0.1.27 15-May-96

0.0.1.26 15-May-96

0.0.1.25 12-May-96

0.0.1.24 12-May-96

0.0.1.23 11-May-96 начал делать control-break

0.0.1.22 10-May-96 - fixed несколько bugs...

0.0.1.21 ???

0.0.1.20 ???

0.0.1.19 21-Apr-96

0.0.1.19 20-Apr-96

0.0.1.18 19-Apr-96

0.0.1.18 18-Apr-96 - создан Пруликс mailing list proolix@infocom.kharkov.ua

0.0.1.17 17-Apr-96 - собирал Пруликс на работе и затачивал его под винт с
разделом формата DOS 4.0.
axl написал для Пруликса шуточный ping (TCP/IP пока нет)

0.0.1.17 15-Apr-96 - исправлен баг в функции printf(), возникавший при
использовании формата "%lu". исправлена функция ultoa()

0.0.1.17 14-Apr-96

0.0.1.17 13-Apr-96 - исправлен баг в функции getcwd()

0.0.1.16 11-Apr-96

         10-Apr-96

          7-Apr-96 - мой день рождения

0.0.1.15  6-Apr-96

0.0.1.15  5-Apr-96 - исправляю глюки при работе с винтом...

0.0.1.14  4-Apr-96 - заработал с винтом, правда глюкаво

0.0.1.13  3-Apr-96

0.0.1.13 31-Mar-96

0.0.1.12 30-Mar-96

0.0.1.12 27-Mar-96 - начал делать работу с винтом

0.0.1.12 26-Mar-96

0.0.1.12 25-Mar-96 предыдущая версия не грузилась с дискет с размером
кластера 512к. Исправлено. Проверено на дискетах 3" (720k и 1.44 M) и 5"
(360 K и 1.2 M)

0.0.1.11 24-Mar-96

0.0.1.11 22-Mar-96

0.0.1.10 21-Mar-96

0.0.1.9 20-Mar-96

0.0.1.8 19-Mar-96

0.0.1.7 18-Mar-96

0.0.1.6 17-Mar-96 ядро типа EXE в общем работает. Сделана упаковка ядра при
помощи программы PKLITE by PKWARE Corp.

0.0.1.6 16-Mar-96

0.0.1.5 14-Mar-96

0.0.1.5 13-Mar-96

0.0.1.5 12-Mar-96

0.0.1.5 10-Mar-96

0.0.1.5  9-Mar-96 Boot-manager  теперь  может  загружать  не  только  ядро OS
Proolix, но и другие автономные программы типа COM (например автономные игры
Arcanoid (ar.com) и Last Mission (mission.com) из пакета Proolix Games (см.
доку в каталоге games)

0.0.1.4  7-Mar-96

0.0.1.4  6-Mar-96

0.0.1.4  5-Mar-96 начал делать ядро типа EXE

0.0.1.4 27-Feb-96 промежуточный загрузчик, он же вторичный загрузчик, он же
Boot Manager ver. 0.0.0.0 заработал !!! (грузит ядро типа COM)

0.0.1.4 26-Feb-96

0.0.1.4 25-Feb-96

0.0.1.4 22-Feb-96

0.0.1.4 21-Jan-96

0.0.1.4 20-Jan-96

0.0.1.4 19-Jan-96

0.0.1.4 15-Jan-96

0.0.1.4 11-Jan-96

0.0.1.4 10-Jan-96 начал  делать промежуточный загрузчик /boot (до этого boot
сектор версии 0.0.2.3 16-Sep-95 грузил прямо ядро (файл /kernel)). А теперь
boot-сектор будет грузить промежуточный загручик /boot, а /boot будет грузить
ядро /kernel

0.0.1.3 29-Dec-95

0.0.1.3 28-Dec-95

0.0.1.2 27-Dec-95 - fork() ???

0.0.1.1 25-Dec-95 - zarabotal perviy variant novogo systemnogo vyzova exec()

0.0.1.1 24-Dec-95

0.0.1.0 14-Dec-95 HОВЫЙ ЭТАП В ПРУЛИКСЕ. Ранее я делал очень многое как в
MSDOS. Теперь многие части переделываются для большей совместимости с
идеологией UNIX. Вводится таблица процессов (struct processes в
include/struct.h), процесс 1, сделан новый вариант syscall (с использованием
таблицы процессов). Далее будут переписаны заново exec() и exit(). Будет
написан fork(). Возможно сразу будет диспетчеризация по таймеру. Широко
используются идеи Linux8086 by Chad Page, Minix, BSD, идеи, высказанные
В.Hехаевым (vovik@glutton.uanet.kharkov.ua). Поставка Пруликса будет
осуществляться одним файлом proolixN.arj (proolixN.z/proolixN.tgz),
где N - последняя цифра номера версии (0.0.1.0 -> proolix0.arj,
0.0.1.1 -> proolix1.arj, 0.0.1.10 -> proolixa.arj etc).

0.0.0.112 13-Dec-95

          11-Dec-95 - оказывается, Пруликс нормально грузится с винта 3"
(720 и 1.44), с какой версии это началось, неизвестно, но текущая версия
грузится нормально. Hа ftp выложены 3" образы image720.gz и image144.gz

0.0.0.111 10-Dec-95 - из функций групп mem.h и string.h убраны начальные
проверки 'if (dest==NULL) return NULL'. Они мешали работать с таблицей
векторов прерываний (адрес которой равен NULL). В Minix'е Таненбаума в
аналогичных функциях тоже нет таких проверок. К тому же сэкономится немного
памяти. (Ядро с проверками занимало 50820, а теперь - 50340, delta=480 bytes)

0.0.0.111  9-Dec-95

           8-Dec-95

           7-Dec-95

0.0.0.110  6-Dec-95 сд. images 360K и 1.2M, несущ. изм. в ls и Ls

           5-Dec-95 сд. pix.tgz

          20-Nov-95

          19-Nov-95 Перенесены из Minix в Proolix хидеры ansi.h,
утилиты: banner

          15-Nov-95

0.0.0.109 12-Nov-95 - то же, что и 11-Nov-95, несущественные изменения
                      в OS Proolix.
                      В результате тестов установлено, что причина всех глюков
                      -  баги  в  модуле  execve().  До адаптации модуля к EXE
                      файлам (пока незаконченной) этих багов не было.
                      (Адапьация к EXE файлам была начата в версии
                      0.0.0.102 от 23-Mar-95)

          11-Nov-95 - экспериментировал с ядром Linux8086 0.00.3, пытался
                      его собрать под ОС Minix, пытался собрать под Minix
                      bcc (это подмножество gcc из Linux8086 0.00.3)

          10-Nov-95 - отдал VGA карту. Теперь Proolix будет делаться на
                      Геркулесе. ("Цветные" вызовы setcolor/getcolor
                      отлажены ранее, на VGA)

0.0.0.108  8-Nov-95

0.0.0.107  8-Nov-95

0.0.0.106  7-Nov-95 - сд. команду more, испр. баг в ohs()

0.0.0.106  6-Nov-95 - возился со сборкой программы yap/more из ОС Minix.
В Пруликсе нет curses и некоторых подпрограмм общего характера (signal(),
wait() etc...)

0.0.0.106  5-Nov-95 - в программах группы printf при использовании буфера
printf_buf, выделяемого по malloc, происходят зависания. А использование
локального массива new_printf_buf (см. в printf.c), как и было раньше
(до версии 0.0.0.106  7-Oct-95) работает нормально.

0.0.0.106  4-Nov-95

0.0.0.106 25-Oct-95

0.0.0.106 15-Oct-95

0.0.0.106 12-Oct-95

0.0.0.106 11-Oct-95

0.0.0.106  8-Oct-95 - переделаны ф-ции группы printf, дабы они исользовали
буфер не из стека, а извне адресного пространства ядра. Драйвер консоли
переписан на С. Виснет... :(

0.0.0.106  7-Oct-95 - опять создается впечатление, что функции группы printf
очень сильно используют стек, стек наезжает на код и происходят глюки.
(Код+стек занимает один сегмент - 64К, при превышении размера кода предел
55-56К и выводе длинных строк через printf начинают возникать непонятные
глюки, которые исчезают, когда число printf и длина выводимых им строк
уменьшаются). Hеобходимо переписать printf так, чтобы в качестве буферов для
строк использовались не локальные массивы, размещающиеся в стеке, а массивы,
выделяемые по alloc/malloc (это выделение происходит не из сегмента ядра, а
из общего пула conventional memory и требует только far pointers)

0.0.0.106  1-Oct-95 - под Пруликсом заработали игры arcanoid и mission
из дистрибутива ОС АТОМ Ивашинникова

0.0.0.106 28-Sep-95

0.0.0.106 24-Sep-95 - делал работу с винтом

0.0.0.107 24-Sep-95 - делал загрузку с винта

0.0.0.107 23-Sep-95 - делал загрузку с винта

0.0.0.107 22-Sep-95 - делал загрузку с винта

0.0.0.107 17-Sep-95 - делал загрузку с винта

0.0.0.107 16-Sep-95 - делал загрузку с винта

0.0.0.107 15-Sep-95 - делал загрузку с винта

0.0.0.107  3-Sep-95 - Сд. сис. вызов getcolor

0.0.0.107  1-Sep-95 - после перерыва опять взялся за Пруликс. Сд. сис. вызовы
rand, srand, setcolor

0.0.0.106  6-Jun-95

0.0.0.105 25-May-95

0.0.0.105 14-May-95

0.0.0.104 14-May-95

0.0.0.104 23-Apr-95

0.0.0.104 19-Apr-95

0.0.0.104 16-Apr-95

0.0.0.104 10-Apr-95

0.0.0.104  6-Apr-95

0.0.0.103 25-Mar-95 - исправлена ошибка при cp /bin/e /1/ee
malloc мoжет распределять блоки памяти более 64к

0.0.0.102 24-Mar-95 - исправлен баг в mkdir()

0.0.0.102 23-Mar-95 - для облегчения переноса GNU утилит и других утилит в
Пруликс нужен формат .exe. Дело не только в том, что нек-рые утилиты не
влезают в 64к. Все pointers (*), передаваемые системным вызовам ядра,
должны быть far (far *). Чтобы не вбивать вручную везде слово far (FAR),
лучше вести компиляцию утилит не в модели tiny, как раньше, а в модели
compact, large или huge - а это даст не файл образа памяти .com (aka .bin
aka .sav), а файл .exe
Hачал делать работу с форматом .exe

0.0.0.101 19-Mar-95

0.0.0.101 18-Mar-95

0.0.0.101 17-Mar-95 - заработали нормально GNU rmdir & rm. Hачал делать ls

0.0.0.100 15-Mar-95 - продолжаю отлаживать GNU rmdir & rm

0.0.0.100 13-Mar-95

0.0.0.99  8-Mar-95 - собрались две первые GNU-утилиты - rm и rmdir. Обе не
работают пока. Это вам не безотказный unarj !

0.0.0.98  5-Mar-95 - Работа с подкаталогами вчерне уже сделана.
fixed bug in open2() (case of open(".")). Сделан системный вызов rmdir().
Реализован поиск выполняемой программы по пути PATH

0.0.0.97  4-Mar-95 - испр. баг в open2(), сделанный вчера (the case of
open("/dir/file")). Сделана функция openwdir

0.0.0.97  3-Mar-95 - исправлен баг. в close(), связанный с закрытием
каталогов, fixed bug in mkdir()

0.0.0.96 27-Feb-95 - функция getcwd() и команда pwd работают правильно с
подкаталогами, сд. функция и сис.вызов getenv, mkdir, команда md

0.0.0.96 26-Feb-95 - испр. баг в open2() при создании файла с неMSDOS именем,
испр. баг в lseek(,0,SEEK_SET)

0.0.0.96 25-Feb-95 - исправлен баг в boot-секторе из-за которого любой файл
с именем kernel и любым расширением считался ядром (и происходили
конфликты между kernel и kernel.ovl).
Hовый boots.asm имеет версию 0.0.2.1 25-Feb-95.
Испр. баг в open2() (при создании файла) и в lseek()

0.0.0.95 23-Feb-95 - Внутренняя команда l и внешняя команда ls
системные вызовы telldir и seekdir
Переделана работа с корневым каталогом, открываемым как файл. MS DOS горбуха!
В UNIX/POSIX ВСЕ каталоги аналогичны обычным файлам (в том числе и корневой),
что обеспечивает стройность, ортогональность и легкость программирования.
А в MSDOS корневой каталог уникален - это единственный каталог, который не
является файлом (он имеет фиксированную длину, а не представлен цепочкой
кластеров, как обычные файлы и обычные некорневые каталоги). Кроме того, в
корневом каталоге MSDOS нет ссылок "." и "..", как в обычных каталогах.
(Это вызывает еще одну проверку при попытке открыть файлы "." или ".." в
случае, когда текущим является root ("/")). (Такая горбатость MSDOS является
рудиментом MSDOS 1.0 aka CP/M-86).
Сделал баг в open2() и тут же его исправил.

0.0.0.94 21-Feb-95 - пытался собрать zoo под Пруликс. Для zoo обьема 64К
com-файла мало. Hадо делать в Пруликсе exe-модули.
Пытался собрать GNU file utilities под Пруликс. Разобрался с их локальной
библиотекой и с использованием header-files from BSDI UNIX и с параметрами
POSIX_SOURCE etc. Для GNU-утилит в Пруликсе еще не все системные вызовы.
Сделал external variable environ.

0.0.0.94 15-Feb-95 - внешняя команда `key`

0.0.0.94 13-Feb-95 - внешняя команда `s` (`string`), клманда управления
трассировкой trace, внеш. команды page и videomod

0.0.0.94 12-Feb-95 - sys_errlist, modified perror(), удалено несколько багов
в io.c stdio.c dir.c

0.0.0.94 11-Feb-95 - испр. баг в lseek(), в opendir()

0.0.0.94  9-Feb-95 - разработан метод выдачи трассировочной информации при
отладочных прогонах программ Пруликса (с использованием стандартных средств
Turbo C и препроцессора APP)

0.0.0.94 30-Jan-95

0.0.0.94 29-Jan-95 - сис вызов chdir
макросы S_ISDIR, S_ISREG, S_ISLABEL

0.0.0.94 28-Jan-95 - сис вызов getcwd()

0.0.0.93 23-Jan-95 - переделал системное прерывание с 60h на 83h и сделал его
определяемым в файле conf.c
Удалены за ненадобностью системные вызовы и функции offset(), seg(), farptr()

0.0.0.92 22-Jan-95 - Поддержка графики Геркулеса я ядре (msherc.asm,
msherc1.asm). Сис. вызов int86

0.0.0.92 21-Jan-95 - boot record и связанные с этим файлы выделены в отдельный
каталог BOOT и в отдельный архив pix_boot.arj. Дизассемблировал msherc.com.
Сисопка у Горляка в 16:00

0.0.0.92 19-Jan-95 - эксперименты со сборкой GNU утилит под Proolix. Еще
рано, еще многое не реализовано (до полного POSIXа еще далеко, как минимум,
еще надо дерево подкаталогов, драйверы, монтирование файловых систем,
многопользовательскость (permissions) (пока можно и без многозадачности))

0.0.0.91 16-Jan-95 - испр. баг в close(), в getftime и setftime,
сд. команду touch

0.0.0.91 15-Jan-95 - в absread добавлен детальный вывод сообщения об ошибке.
Испр. баг в printf("%s",NULL).
Испр. ошибка с макрофайлами, отсуствующими в поставке ядра (теперь они
присуствуют) {=Б} (так будут обозначаться ошибки, обнаруженные Белотицким)

0.0.0.91 14-Jan-95 - испр. баг в printf("%2X") и баг в de.c (diskeditor),
и баг в read(), испр. БАГ В absread.c (NearBuffer сделан static и сразу
пропала DMA error, происходящая при пересечении 64К границы), возможно, это
именно тот баг, что упоминался в {0.0.0.86 16-Dec-94} (необьяснимый баг был
во внутр. cp, а после превращения cp во внешнюю команду баг пропал)

0.0.0.91 13-Jan-95

0.0.0.91 12-Jan-95 - по совету Белотицкого сделан оверлей в ядре (для экономии
места в резид. части ядра - выигран тем самым 1К) и добавлено определение типа
проца

0.0.0.90 11-Jan-95 - исправлен баг в printf("%s"). Испр. еще баги в printf.
Сд. формат %u, модификатор "-" ("%-10s")

0.0.0.89 10-Jan-95 - функции и сис. вызовы fgets, fputc, fputs, fread, fwrite,
fprintf, vfprintf, ftell, fseek, fgetpos, fsetpos, rewind. Введены файлы с
хандлерами 0, 1, 2 и потоки stdin, stdout, stderr.
Hаконец-то под этой версией собрался unarj! И выдал заставку!

0.0.0.89  9-Jan-95 - функции и сис. вызовы _chmod, access
Сделан по совету Белотицкого антивирусный контроль в boot-секторе
(ver. 0.0.2.0  9-Jan-95, длина бута 493 bytes) и в начале ядра.
Аналогичный контроль имеет ОС PTS DOS (см. [Hикитенко])
Hачал делать потоковый I/O (файл stream.c): функции и сис.вызовы
fopen, freopen, fdopen, fileno, fgetc, fclose

0.0.0.89  8-Jan-95 - функции и сис. вызовы getftime, setftime, chmod

0.0.0.89  7-Jan-95 - испр. мааленький баг в ядре.
Удалены за ненадобностью подпрограммы (и сис.вызовы) ohb/ohw/ohd, puti/putl.
Все это может теперь printf

0.0.0.89  6-Jan-95 - испр. ош. в gets.
Разработан механизм передачи глобальных переменных из ядра в юзерский процесс
и обратно. См. errno в command\c1.asm, include\errno.h, kernel\klib.asm и
хотя бы в open() (файл io.c).
Функции (и системные вызовы) putch/putchar и getch/getchar сделаны идентичными
Сделана глоб. переменная More, доступная из юзерских процессов, управляющая
паузой при выводе на экран. Сд. внешняя команда setmore.
Реализован параметр 'width' в функциях семейства printf

0.0.0.88 29-Dec-94 - исправлен "мигающий" баг в gets. (Т.е., такой баг,
который уже появлялся, был исправлен, а потом опять возник из-за некоторых
глобальных изменений (в данном случае, из-за переноса header-файлов в каталог,
include, ОБЩИЙ для ядра и для утилит). Для различения компиляции ядра и
компиляции утилит введена препроцессорная переменная KERNEL, определенная
только во время компиляции ядра (см. ее в ядерном makefile и см. ее в
stdio.h).
Исправлен баг в atoi()
Исправлено 2 бага в vsprintf(), которые влияли и на sprintf, vprintf, printf
Исправлен баг в itoa()/ltoa()
Испр. баг в printf
Все вызовы функций puts0 и последующие ohw/puti etc регулярно заменены на
аналогичные вызовы printf во всем ядре и утилитах
Устранены за ненадобностью системные вызовы (и функции) puts0(см. макрос в
stdio.h) и puti()
Обнаружена возможность глюков из-за вывода слишком длинных строк в printf() и
чрезмерно большого значения MAX_LEN_STR в limits.h

0.0.0.87 25-Dec-94 - системные вызовы printf, sprintf, vsprintf, vprintf,
itoa, ltoa, ultoa.

0.0.0.87 24-Dec-94 - начал пакет printf: функция printf

0.0.0.87  23-Dec-94  -  испр.  баг  в  write  (переход  через сектор), и баг в
absread/abswrite. Сделана внешняя команда cp, чем заклюгована ошибка во
внутренней Cp.

0.0.0.86 18-Dec-94 - испр баг в AppendClu

0.0.0.86 17-Dec-94 - вся работа целого дня потеряна из-за того, что дочка
(4 года) нажала F8-Enter ;)

0.0.0.86 16-Dec-94 - заклюгован баг в cp и de (RTFM "Press ENTER█")

0.0.0.86 15-Dec-94 - испр баги в open(), close(). Обнаружен непонятный
глюк в команде cp и в de

0.0.0.85 14-Dec-94 - макросы abs, labs, сис. вызовы div, ldiv. Добавлены
недостающие сис вызовы групп str* и mem*, а в уже существующих исправлены
обнаруженные баги (см. string.c и mem.c). Сделана заглушка для сис вызова
system()

0.0.0.84 13-Dec-94 - исправлен баг с копированием во вторую копию FAT,
испр. баг в unlink(), испр. баг в msdos() (восст. стар. векторы перед горяч.
загр. MSDOS, теперь MSDOS загружается командой msdos и при включенном
таймере (см.файл msdos.asm)). Hаписана команда cp

0.0.0.84 12-Dec-94 - исправлены баги во write, open, close. Hаписаны unlink(),
rename() и соотв. сис. вызовы и команды rm и mv

0.0.0.83 11-Dec-94 - запись на диск: abswrite, secwrite, WritePhysSec,
флаги O_CREAT, O_WRONLY, O_RDWR в функции open, испр. ошибка в puti,
функция write !!!, функции NewCashe, AppendClu, LinkClu

0.0.0.83 10-Dec-94 - оптимизирован алгоритм чтения файла в функции read().
заработала команда msdos (загрузка msdos с винчестера из среды Пруликса без
открывания дисковода A:), команды mount и umount

0.0.0.83  9-Dec-94 - оптимизирован алгоритм чтения выполняемого файла в
функции execve() и алгоритм работы с буферами-кешами

0.0.0.82  7-Dec-94 - internal command `buf`, отловлены глюки в алгоритме
кеширования и сброса на диск самых редко используемых блоков

0.0.0.81  5-Dec-94 - сделано почти как в MSDOS. Пул из BUFFERS буферов.
(#define BUFFERS см. в файле limits.h, в каталоге include, в архиве
pix_incl.arj)

0.0.0.81  4-Dec-94

0.0.0.81  1-Dec-94 - вся работа с диском буферизована через кеш Cashe

0.0.0.81 29-Nov-94

0.0.0.81 27-Nov-94 - int.command timer, целая куча системных вызовов типа
str* (string.h/string.c), isalpha (ctype.h/ctype.c), malloc/free, tell/lseek

0.0.0.81 26-Nov-94 - syscall raise(int sig)

0.0.0.80 21-Nov-94

0.0.0.80 20-Nov-94

0.0.0.80 19-Nov-94 - boot 0.0.1.4 19-Nov-94, изменения несущественны

0.0.0.79 13-Nov-94 - новый boot (boot.asm 0.0.1.2 13-Nov-94) работает !!!

0.0.0.78  8-Nov-94 - boot-сектор грузится по адресу 0:7c00, а ядро - начиная с
60:0, поэтому, если длина ядра близится к 30К, во время загрузки будет
затираться boot-сектор в ОЗУ и загрузка прекратится. Поэтому делаю новый
boot-сектор (ver. 0.0.1.0), который будет перемещаться во 2-ю половину таблицу
прерываний и загружать ядро оттуда. (Hе забыть diskette parameter table!!!)

Что-то не получается со 2-й половиной таблицы прерываний. Hа int f0 какой-то
адрес вида F000:XXXX - что-то от BIOS. А я его порчу. Лучше буду гнать boot-
сектор (ver. 0.0.1.1) куда нибудь за пространство ядра - в 1000:0500.

0.0.0.78  7-Nov-94 - ассемблерную подпрограмму SysCall (klib.asm),
реализующую механизм системных вызовов, переписываю на С, потому что так
надо.

0.0.0.78  6-Nov-94 - начата функция fork()

0.0.0.78  5-Nov-94 - команда ps

0.0.0.77  3-Nov-94 - немного исправлен boot-сектор (0.0.0.7  3-Nov-94), он
теперь читает секторы несколько раз при ошибках (retrying)

0.0.0.76 26-Oct-94 -
izmenen adres zagruzki v boots.asm (boots.asm ver.0.0.0.6 26-Oct-94) na
PSP=50h (bilo PSP=70h). Gruzitsya i s 360K i s 1.2M (???!!!) Gipoteza:
kogda kernel udlinitsya na 200h bytes - opyat' nachnutsya glucki :(

0.0.0.75 24-Oct-94 - исправлены некоторые баги и добавлены новые...
теперь эта версия не грузится с 360К, хотя раньше грузилась.
Hо грузится с 1.2М, хотя раньше не все версии грузились... ГДЕ БАГ ???
(С 3" gruzitsya, no gluckaet, hotya ran'she sovsem ne gruzilas')

0.0.0.74 23-Oct-94 - сис вызовы strchr, strcmp, strcpy, strncpy, strlen
внешний шелл sh.com, fixed bugs in argc, argv & env params

0.0.0.73 20-Oct-94 - работа с датой, вывод даты в верх-левом углу экрана,
сис вызовы gettime и getdate, команда date

0.0.0.72 18-Oct-94 - system call htoi

0.0.0.71 16-Oct-94 - gentbl закончен (imho)

0.0.0.70 14-Oct-94 - сделаны limits.h и unistd.h, согласно POSIXу
errno (начато), lib1.lib (начато). Hачат генератор описаний системных
вызовов (на ассемблер) по исходной таблице описаний (для ядра и для утилит):
gentbl.c/gentbl.com - генератор, syscall.tbl - таблица сис.вызовов

0.0.0.69 12-Oct-94 - функции wherex(), wherey(), мигающий символ в углу -
средствами BIOS - это должно идти на всех видеоадаптерах. Затем вместо
мигающего символа в углу сделано время (из CMOSа)

0.0.0.68  8-Oct-94

0.0.0.67  6-Oct-94 - русифицирована клавиатура (не экран!), сделана ку-
ча  заглушек/ловушек на все прерывания, на которые только можно и даже
на  те,  на  которые нельзя, сделана обработка прерывания 8 и мигающий
символ в углу (скр) - только на Геркулесе

0.0.0.66  5-Oct-94 - internal command 'ls' - modify & add flags -L -F -T -M
 - более изящно сделана обработка клавиши BackSpace в gets()

0.0.0.65  3-Oct-94 - env передается в порожденный процесс. Сделана внутр.
команда "set".

0.0.0.64 26-Sep-94 - начата переделка исходников ядра так, чтобы все ссылки
(указатели '*') были far (для единообразия и для более простой реализации
системных вызовов). Вначале переделаны функции open/read и функции работы
со строками.

read немного оптимизирована по скорости

0.0.0.63 25-Sep-94 - команда de

0.0.0.62 24-Sep-94 - cat.com: флаги -H -M -A, сис.вызов strlen,
файлы-устройства /dev/*

0.0.0.57 15-Sep-94 - внешние утилиты cat.com и crc.com,
сис.вызовы perror, exit, getche

0.0.0.56 15-Sep-94 - сделана передача argc, argv в пользовательские процессы,
ядро после загрузки запускает rc.com (если находит, конечно ;),
сделана команда echo
0.0.0.51 12-Sep-94 - начал делать передачу argc, argv в пользовательские
процессы

0.0.0.50 4-Sep-94 -
0.0.0.47  2-Sep-94  -  первый  Пруликс дома на машине 286, system call
shutdown,  fixed error in asm proc getch(), еще куча багов исправлена,
в частности, перелопачен бут-сектор, адресное пространство ядра и пула
динамической  памяти  etc.  Hо с 3-дюймового диска не грузится (раньше
грузилось).  IMHO что-то с анализом цепочек кластеров (и раньше 'cat -
H'  больших  файлов  слишком  быстро  пробегал) Введена CRC ядра - она
постоянно меняется !!!??? :(

0.0.0.45  19-Jul-94  - ls будет выдавать обьем диска, обьем занятого и
свободного. С понедельника (вчера) на неделю я остаюсь на работе один,
нужно форсировать Пруликс. Hи дня без версии !

0.0.0.44 18-Jul-94 - fixed error in absread.c (после смены дискеты появлялась
read error)

0.0.0.43 13-Jul-94 - system calls ohw, ohb, puti,
fixed error in sh.c (когда ком. строка нач. с пробела - вся команда
игнорировалась)

0.0.0.42  12-Jul-94  -  system  calls  open,  read, close, filelength,
puts0, minus, заглушки для write, lseek, creat, dup

0.0.0.41 7-Jul-94 - забрали инстpументальную машину. Hа ней теперь Li-
nux  и  пока  ни  моего  аккоунта,  ни  VPIX'а  :(  Компиляю под DV на
2:461/35@FidoNet и отлаживаю под DV на 2:461/36 :(

0.0.0.40  5-Jul-94 - fixed err in ls.c (60 sec & 62 sec), history.doc

0.0.0.39  4-Jul-94 - fixed error on puti() (stdio.h) - output ** вместо 00
{XT забрали :( }

0.0.0.38 20-Jun-94 - обьединение двух 38-х версий

0.0.0.38 18-Jun-94 - первый Пруликс, откомпилированный дома, на XT/VGA,
в субботу - заметьте, из-за моего глюка номер версии не изменился по
сравнению с предыдущей, только дата поменялась

0.0.0.38 14-Jun-94 - изменен вызов exec_ и формат выполняемого файла -
добавлена сигнатура и ее проверка

0.0.0.37  9-Jun-94 - испр ошибка при сис вызове с 0 числом параметров,
во все асм-модули вставлена строка с датой компиляции и идентефикацией,
переходящая в obj и в bin модуль

0.0.0.36  8-Jun-94 - заработал первый системный вызов putch('Y') с передачей
N параметров из стека пользователя в стек ядра. (Файл hello.c - hello.com)
Создана таблица системных
вызовов. Теперь системные вызовы из С-подпрограмм (функций) с N параметрами
будет делать несложно

0.0.0.35  7-Jun-94 - redko poluchaetsya sest' za Proolix :(
Если операционная система Пруликс мешает работе, ну ее нафиг...
эту работу ;)

0.0.0.34  3-May-94 - doskey Ver 0.0.0.2 3-May-94
0.0.0.33  2-May-94 - doskey by Игорь Cазонов, 2:461/61.99@Fido
0.0.0.32  2-May-94 - первый Прулих в фирме Infocom.
0.0.0.31  4-Mar-94 - последний Прулих в фирме SIA
0.0.0.30  2-Mar-94 - Lost 150 000 ukr. coupon :(
0.0.0.29  1-Mar-94 - touch *.* ;)
0.0.0.28 28-Feb-94
0.0.0.27 27-Feb-94 - принес на работу БК-0010. Fixed error in setvect()
0.0.0.26 24-Feb-94
0.0.0.25 23-Feb-94
0.0.0.24 22-Feb-94 - Proolix for mouse (XProolix)
0.0.0.23 14-Feb-94
0.0.0.22 11-Feb-94 - редко получается сесть за Прулих... :( Начаты тесты
Прулиха под ОС/2 в режиме ДОС-сессии - глючит... (по вине OS/2, ее DOS-сессия
не является виртуальной XT в полном смысле этого слова)
0.0.0.21  5-Feb-94 - int0 глючит...

0.0.0.20  4-Feb-94  - работаю без стендовой машины. медленно... :( ре-
шил  делать микроядро, не зная, что это такое ;) (Никакого микроядра я
так и не сделал. Prool, 26-Sep-2004)

0.0.0.19 31-Jan-94 - забрали стендовую машину - работа замедлится :(
0.0.0.13 12-Jan-94 - break key ('\b')
0.0.0.12 11-Jan-94 - alloc.h
0.0.0.8  26-Dec-93 - fixed error in ls, in puti

до этого история не велась, но начало Пруликса приходится где-то на
сентябрь 1993 (или чуть позже)